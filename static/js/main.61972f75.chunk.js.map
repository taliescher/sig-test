{"version":3,"sources":["components/Icon.js","components/AddItemFloatingButton.js","components/AddItemModal.js","components/Table.js","App.js","registerServiceWorker.js","index.js"],"names":["Icon","_ref","asc","react_default","a","createElement","version","xmlns","x","y","width","height","viewBox","id","d","AddItemFloatingButton","action","className","onClick","MdAdd_default","color","fontSize","AddItemModal","close","save","_useState","useState","_useState2","Object","slicedToArray","alert","showAlert","releaseDateRef","useRef","titleRef","productionBudgetRef","worldwideBoxOfficeRef","placeholder","ref","type","required","current","value","title","releaseDate","productionBudget","worldwideBoxOffice","formatCurrency","currency","toConsumableArray","toString","reduce","ac","el","i","concat","Table","tableData","columns","rows","isModalOpen","toggleModal","_useState3","_useState4","extendedRows","addItem","_useState5","_useState6","order","updateOrder","_useState7","_useState8","formatedRows","updateRows","formatRows","sort","b","Date","split","reverse","orderRows","slice","Fragment","map","column","key","replace","components_Icon","IosSearch_default","onInput","e","filter","toLowerCase","includes","target","row","number","join","align","components_AddItemFloatingButton","boolean","components_AddItemModal","item","objectSpread2","length","saveMovie","App","components_Table","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.61972f75.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Icon = ({ asc }) =>\n  asc ? \n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"13px\" height=\"13px\" viewBox=\"0 0 16 16\">\n    <path id=\"status-order-ascending\" d=\"M5.15,11.15L4,12.29V2.25c0-.28-.2-.5-.5-.5S3,1.97,3,2.25v10.04l-1.15-1.15c-.2-.2-.5-.2-.7,0s-.2.5,0,.7l2,2c.24.2,.47.2,.7,0l2-2c.2-.2.2-.5,0-.7S5.34,10.95,5.15,11.15zM15.5,8h-9C6.2,8,6,8.2,6,8.5S6.2,9,6.5,9h9C15.78,9,16,8.78,16,8.5S15.78,8,15.5,8zM6.5,6H13c.28,0,.5-.2.5-.5S13.28,5,13,5H6.5C6.2,5,6,5.2,6,5.5S6.2,6,6.5,6zM6.5,3H11c.28,0,.5-.2.5-.5S11.28,2,11,2H6.5C6.2,2,6,2.2,6,2.5S6.2,3,6.5,3z\"/>\n  </svg>\n  : <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"13px\" height=\"13px\" viewBox=\"0 0 16 16\">\n      <path id=\"status-order-descending\" d=\"M5.15,11.15L4,12.29V2.25c0-.28-.2-.5-.5-.5S3,1.97,3,2.25v10.04l-1.15-1.15c-.2-.2-.5-.2-.7,0s-.2.5,0,.7l2,2c.24.2,.47.2,.7,0l2-2c.2-.2.2-.5,0-.7S5.34,10.95,5.15,11.15zM15.5,2h-9C6.2,2,6,2.2,6,2.5S6.2,3,6.5,3h9C15.78,3,16,2.78,16,2.5S15.78,2,15.5,2zM13,5H6.5C6.2,5,6,5.2,6,5.5S6.2,6,6.5,6H13c.28,0,.5-.2.5-.5S13.28,5,13,5zM11,8H6.5C6.2,8,6,8.2,6,8.5S6.2,9,6.5,9H11c.28,0,.5-.2.5-.5S11.28,8,11,8z\"/>\n    </svg>\n\nexport default Icon;\n","import React from 'react'\nimport MdAdd from 'react-ionicons/lib/MdAdd'\n\nconst AddItemFloatingButton = ({ action }) =>\n  <button className=\"floating-button\" onClick={() => action(true)}>\n    <MdAdd className=\"floating-button__icon\" color=\"white\" fontSize=\"28px\"/>\n  </button>\n\nexport default AddItemFloatingButton","import React, { useState,useRef } from 'react'\nimport MdAdd from 'react-ionicons/lib/MdAdd'\n\nconst AddItemModal = ({ close, save }) => {\n  const [alert, showAlert] = useState(false)\n  const releaseDateRef = useRef()\n  const titleRef = useRef()\n  const productionBudgetRef = useRef()\n  const worldwideBoxOfficeRef = useRef()\n  const formVerify = (newMovie) => {\n    releaseDateRef.current.value && titleRef.current.value && productionBudgetRef.current.value && worldwideBoxOfficeRef.current.value\n    ? save({\n      title: releaseDateRef.current.value,\n      releaseDate: titleRef.current.value,\n      productionBudget: productionBudgetRef.current.value,\n      worldwideBoxOffice: worldwideBoxOfficeRef.current.value,\n    })\n    : showAlert(true)\n  }\n  return (\n    <div className=\"modal__area\">\n      <div className=\"modal\">\n        <MdAdd className=\"modal__close\" onClick={() => close(false)} />\n        <h3>Add a new Movie Information</h3>\n        <div className=\"modal__form\">\n          <span>Movie name</span>\n          <input\n            className=\"modal__input\"\n            placeholder=\"e.g. Iron Man\"\n            ref={releaseDateRef}\n            type=\"text\"\n            required\n          />\n          <span>Release date</span>\n          <input\n            className=\"modal__input\"\n            placeholder=\"e.g. 29-02-2020\"\n            ref={titleRef}\n            type=\"text\"\n            required\n          />\n          <span>Production budget</span>\n          <input\n            className=\"modal__input\"\n            placeholder=\"e.g. 13000000\"\n            ref={productionBudgetRef}\n            type=\"number\"\n            required\n          />\n          <span>Worldwide box office</span>\n          <input\n            className=\"modal__input\"\n            placeholder=\"e.g. 13000000\"\n            ref={worldwideBoxOfficeRef}\n            type=\"number\"\n            required\n          />\n          {alert && <p className=\"alert\">please fill all fields</p>}\n          <button className=\"modal__button\" onClick={() => formVerify()}>It's showtime</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AddItemModal\n","import React, { useState } from 'react'\nimport Icon from './Icon'\nimport IosSearch from 'react-ionicons/lib/IosSearch'\nimport AddItemFloatingButton from './AddItemFloatingButton'\nimport AddItemModal from './AddItemModal'\n\nconst formatTitle = (title) =>\n  title === 'Number' ? '#' : title.replace(/in\\s\\$$/g, () => '(in $)')\n\nconst formatDate = (date) =>\n  date\n    .split('-')\n    .map(el => el.replace(/^0+/, ''))\n    .join('/') || ''\n\nconst formatCurrency = (currency) =>\n  currency > -1 ? [...currency.toString()]\n    .reduce((ac, el, i) => (i % 3 === 0) ? ac.concat(`,${el}`) : ac.concat(el))\n    : 'Unknown'\n\nconst orderRows = (order, id, rows) => {\n  if (id === 'releaseDate') {\n    return order\n      ? rows.sort((a, b) => b.releaseDate === 'Unknown' ? -1 : new Date([...b.releaseDate.split('-').reverse()]) - new Date([...a.releaseDate.split('-').reverse()]))\n      : rows.sort((a, b) => b.releaseDate === 'Unknown' ? -1 : new Date([...a.releaseDate.split('-').reverse()]) - new Date([...b.releaseDate.split('-').reverse()]))\n  }\n  return order\n    ? rows.sort((a, b) => a[id] < b[id] ? 1 : a[id] > b[id] ? -1 : 0)\n    : rows.sort((a, b) => a[id] > b[id] ? 1 : a[id] < b[id] ? -1 : 0)\n  // On the long term, checking the order before execution\n  // of the sort reduces the processing count.\n  // each line has O(n), doing .reverse() instead of this\n  // would double the procedures required.\n}\n\nconst Table = ({ tableData }) => {\n  const { columns, rows } = tableData\n  const [isModalOpen, toggleModal] = useState(false);\n  const [extendedRows, addItem] = useState(rows)\n  const [order, updateOrder] = useState({ id: '', asc: true })\n  const [formatedRows, updateRows] = useState(extendedRows)\n\n  const saveMovie = (item) => {\n    addItem([...extendedRows, { number: extendedRows.length + 1, ...item }])\n    updateRows([...extendedRows, { number: extendedRows.length + 1, ...item }])\n    toggleModal(false)\n  }\n\n  const formatRows = id => {\n    updateOrder({ id: id, asc: order.id === id ? !order.asc : false })\n    updateRows(orderRows(order.asc, id, extendedRows.slice()))\n  }\n\n  const filter = (e, id) =>\n    updateRows(extendedRows.filter(el => el[id].toString().toLowerCase().includes(e.target.value.toLowerCase())))\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"table__header\">\n          <tr>\n            {columns.map(column => (\n              <th\n                className=\"cell\"\n                key={ `column-${ column.id }` }\n              >\n                { formatTitle(column.title) }\n                <button\n                  className=\"table__button\"\n                  onClick={ () => formatRows(column.id) }\n                >\n                  <Icon asc={order.id === column.id && order.asc} />\n                </button>\n                <div className=\"table__filter\">\n                  <IosSearch />\n                  <input\n                    onInput={e => filter(e, column.id)}\n                    className=\"table__filter--input\"\n                    placeholder={`e.g. ${rows[0][column.id]}`}\n                  />\n                </div>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {formatedRows.map(( row ) => (\n            <tr className=\"table__row\" key={`row-${ row.number }`}>\n              <td className=\"cell\">{ row.number }</td>\n              <td className=\"cell\">{ row.title }</td>\n              {/* Here i'm aware there are formal ways of handling data\n                  (e.g.: value.toLocaleString(). I am using a pure function\n                  in order to show my skills in the matter. */}\n              <td className=\"cell\">{ formatDate(row.releaseDate) }</td>\n              {/* Same thing below. I'm aware of formal ways of resolving\n                  currency, but i'm using a pure function to brag */}\n              <td className=\"cell\" align=\"right\">{ formatCurrency(row.productionBudget) }</td>\n              <td className=\"cell\" align=\"right\">{ formatCurrency(row.worldwideBoxOffice) }</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <AddItemFloatingButton action={(boolean) => toggleModal(boolean)} />\n      { isModalOpen\n        && <AddItemModal save={(item) => saveMovie(item)} close={(boolean) => toggleModal(boolean)} />}\n    </>\n  )\n}\n\nexport default Table\n","import React from 'react'\nimport './App.css'\nimport Table from './components/Table'\nimport tableData from './data'\n\nconst App = () =>\n  <Table tableData={ tableData } />\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}