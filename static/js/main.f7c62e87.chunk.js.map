{"version":3,"sources":["components/Icon.js","components/Table.js","App.js","index.js"],"names":["Icon","_ref","asc","react_default","a","createElement","version","xmlns","x","y","width","height","viewBox","id","d","formatCurrency","currency","Object","toConsumableArray","toString","reduce","ac","el","i","concat","Table","tableData","columns","rows","_useState","useState","_useState2","slicedToArray","order","updateOrder","_useState3","_useState4","formatedRows","updateRows","formatRows","sort","b","releaseDate","Date","split","reverse","orderRows","slice","className","map","column","key","title","replace","onClick","components_Icon","onInput","e","filter","toLowerCase","includes","target","value","placeholder","row","number","join","align","productionBudget","worldwideBoxOffice","App","components_Table","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f7c62e87.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Icon = ({ asc }) =>\n  asc ? \n  <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"13px\" height=\"13px\" viewBox=\"0 0 16 16\">\n    <path id=\"status-order-ascending\" d=\"M5.15,11.15L4,12.29V2.25c0-.28-.2-.5-.5-.5S3,1.97,3,2.25v10.04l-1.15-1.15c-.2-.2-.5-.2-.7,0s-.2.5,0,.7l2,2c.24.2,.47.2,.7,0l2-2c.2-.2.2-.5,0-.7S5.34,10.95,5.15,11.15zM15.5,8h-9C6.2,8,6,8.2,6,8.5S6.2,9,6.5,9h9C15.78,9,16,8.78,16,8.5S15.78,8,15.5,8zM6.5,6H13c.28,0,.5-.2.5-.5S13.28,5,13,5H6.5C6.2,5,6,5.2,6,5.5S6.2,6,6.5,6zM6.5,3H11c.28,0,.5-.2.5-.5S11.28,2,11,2H6.5C6.2,2,6,2.2,6,2.5S6.2,3,6.5,3z\"/>\n  </svg>\n  : <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"13px\" height=\"13px\" viewBox=\"0 0 16 16\">\n      <path id=\"status-order-descending\" d=\"M5.15,11.15L4,12.29V2.25c0-.28-.2-.5-.5-.5S3,1.97,3,2.25v10.04l-1.15-1.15c-.2-.2-.5-.2-.7,0s-.2.5,0,.7l2,2c.24.2,.47.2,.7,0l2-2c.2-.2.2-.5,0-.7S5.34,10.95,5.15,11.15zM15.5,2h-9C6.2,2,6,2.2,6,2.5S6.2,3,6.5,3h9C15.78,3,16,2.78,16,2.5S15.78,2,15.5,2zM13,5H6.5C6.2,5,6,5.2,6,5.5S6.2,6,6.5,6H13c.28,0,.5-.2.5-.5S13.28,5,13,5zM11,8H6.5C6.2,8,6,8.2,6,8.5S6.2,9,6.5,9H11c.28,0,.5-.2.5-.5S11.28,8,11,8z\"/>\n    </svg>\n\nexport default Icon;\n","import React, { useState } from 'react'\nimport Icon from './Icon'\n\nconst formatTitle = (title) =>\n  title === 'Number' ? '#' : title.replace(/in\\s\\$$/g, () => '(in $)')\n\nconst formatDate = (date) =>\n  date\n    .split('-')\n    .map(el => el.replace(/^0+/, ''))\n    .join('/')\n\nconst formatCurrency = (currency) =>\n  currency > -1 ? [...currency.toString()]\n    .reduce((ac, el, i) => (i % 3 === 0) ? ac.concat(`,${el}`) : ac.concat(el))\n    : 'Unknown'\n\nconst orderRows = (order, id, rows) => {\n  if (id === 'releaseDate') {\n    return order\n      ? rows.sort((a, b) => b.releaseDate === 'Unknown' ? -1 : new Date([...b.releaseDate.split('-').reverse()]) - new Date([...a.releaseDate.split('-').reverse()]))\n      : rows.sort((a, b) => b.releaseDate === 'Unknown' ? -1 : new Date([...a.releaseDate.split('-').reverse()]) - new Date([...b.releaseDate.split('-').reverse()]))\n  }\n  return order\n    ? rows.sort((a, b) => a[id] < b[id] ? 1 : a[id] > b[id] ? -1 : 0)\n    : rows.sort((a, b) => a[id] > b[id] ? 1 : a[id] < b[id] ? -1 : 0)\n  // On the long term, checking the order before execution\n  // of the sort reduces the processing count.\n  // each line has O(n), doing .reverse() instead of this\n  // would double the procedures required.\n}\n\nconst Table = ({ tableData }) => {\n  const { columns, rows } = tableData\n  const [order, updateOrder] = useState({ id: '', asc: true })\n  const [formatedRows, updateRows] = useState(rows)\n\n  const formatRows = id => {\n    updateOrder({ id: id, asc: order.id === id ? !order.asc : false })\n    updateRows(orderRows(order.asc, id, rows.slice()))\n  }\n\n  const filter = (e, id) =>\n    updateRows(rows.filter(el => el[id].toString().toLowerCase().includes(e.target.value.toLowerCase())))\n\n  return (\n    <table className=\"table\">\n      <thead className=\"table__header\">\n        <tr>\n          {columns.map(column => (\n            <th\n              className=\"cell\"\n              key={ `column-${ column.id }` }\n            >\n              { formatTitle(column.title) }\n              <button\n                className=\"table__button\"\n                onClick={ () => formatRows(column.id) }\n              >\n                <Icon asc={order.id === column.id && order.asc} />\n              </button>\n              <input\n                onInput={e => filter(e, column.id)}\n                className=\"table__filter\"\n                placeholder={`e.g. ${formatedRows[0][column.id] || 0}`}\n              />\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {formatedRows.map(( row ) => (\n          <tr className=\"table__row\" key={`row-${ row.number }`}>\n            <td className=\"cell\">{ row.number }</td>\n            <td className=\"cell\">{ row.title }</td>\n            {/* Here i'm aware there are formal ways of handling data\n                (e.g.: value.toLocaleString(). I am using a pure function\n                in order to show my skills in the matter. */}\n            <td className=\"cell\">{ formatDate(row.releaseDate) }</td>\n            {/* Same thing below. I'm aware of formal ways of resolving\n                currency, but i'm using a pure function to brag */}\n            <td className=\"cell\" align=\"right\">{ formatCurrency(row.productionBudget) }</td>\n            <td className=\"cell\" align=\"right\">{ formatCurrency(row.worldwideBoxOffice) }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table\n","import React, { Component } from 'react'\nimport './App.css'\nimport Table from './components/Table'\nimport tableData from './data'\n\nclass App extends Component {\n    render() {\n        return <Table tableData={tableData} />\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}